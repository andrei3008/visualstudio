services:
  web:
    image: client-portal-next:latest
    build:
      context: ./next
      dockerfile: Dockerfile.next
    ports:
      - "8007:3000"
    environment:
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:8007}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      # Fallback: if DATABASE_URL not provided, compose it from POSTGRES_PASSWORD
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:${POSTGRES_PASSWORD:-7f1c2b4a9d6e3f0b8a7e9c6d5f4a1b0c7d8e9f1a2b3c4d5e6f7a8b9c0d1e2f3}@db:5432/client_portal?schema=public}
      # Optional seed vars (admin initial). Leave empty to skip or set via .env.prod
      - SEED_ADMIN_EMAIL=${SEED_ADMIN_EMAIL}
      - SEED_ADMIN_PASSWORD=${SEED_ADMIN_PASSWORD}
      - SEED_ADMIN_NAME=${SEED_ADMIN_NAME}
    restart: unless-stopped
    volumes:
      - storage:/app/storage
    depends_on:
      db:
        condition: service_healthy
    networks:
      appnet:
        aliases:
          - web
    healthcheck:
      test: ["CMD-SHELL", "node -e \"fetch('http://localhost:3000/api/health').then(r=>r.ok?r.json():Promise.reject()).then(j=>{if(j&&j.ok)process.exit(0);else process.exit(1)}).catch(()=>process.exit(1))\""]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 20s

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=client_portal
      - POSTGRES_USER=postgres
      # Fallback default (override in Stack envs for production secrets)
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-7f1c2b4a9d6e3f0b8a7e9c6d5f4a1b0c7d8e9f1a2b3c4d5e6f7a8b9c0d1e2f3}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      appnet:
        aliases:
          - db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 30
volumes:
  storage:
  pg_data:
networks:
  appnet:
